{
  "version": 3,
  "file": "watch.js",
  "sourceRoot": "",
  "sources": [
    "watch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "assert = require(\"chai\").assert\r\n\r\nWatch= require(\"../src/watch\").Watch\r\nTimeMode= require(\"../src/watch\").TimeMode\r\nAltMode= require(\"../src/watch\").AltMode\r\nHrsMode= require(\"../src/watch\").HrsMode\r\nMinsMode = require(\"../src/watch\").MinsMode\r\n\r\ndebugger\r\nwatch = Watch\r\nwatch.modeButton()\r\n\r\ndescribe \"Watch\", ->\r\n  describe \"Test BOTH Inputs in All States\" , ->\r\n    describe \"Mode = TIME - test both inputs SET and MODE \" , ->\r\n      Watch.mode = TimeMode # ensure correct mode\r\n      it \"TIME <- [MODE] : should be ALT\" , ->\r\n        assert Watch.modeButton() , AltMode\r\n\r\n      Watch.mode = TimeMode # reset to correct mode\r\n      it \"TIME <- [SET] : should be HRS\" , ->\r\n        assert Watch.setButton() , HrsMode\r\n\r\n    describe \"Mode = ALT - test both inputs SET and MODE \" , ->\r\n      Watch.mode = AltMode # ensure correct mode\r\n      it \"ALT <- [MODE] : should be TIME\" , ->\r\n        assert Watch.modeButton() , TimeMode\r\n\r\n      Watch.mode = AltMode # reset to correct mode\r\n      it \"ALT <- [SET] : should be ALT - No action\" , ->\r\n        assert Watch.setButton() , AltMode\r\n\r\n    describe \"Mode = HRS - test both inputs SET and MODE \" , ->\r\n      Watch.mode = HrsMode # ensure correct mode\r\n      it \"HRS <- [MODE] : should be MINS\" , ->\r\n        assert Watch.modeButton() , MinsMode\r\n\r\n      Watch.mode = HrsMode # reset to correct mode\r\n      it \"HRS <- [SET] : should be HRS - No change state\" , ->\r\n        assert Watch.setButton() , HrsMode\r\n      it \"HRS <- [SET] : change Watch.hours should be 1\" , ->\r\n        assert Watch.hrs , 1\r\n\r\n    describe \"Mode = MINS - test both inputs SET and MODE \" , ->\r\n      Watch.mode = MinsMode # ensure correct mode\r\n      it \"MINS <- [MODE] : should be TIME\" , ->\r\n        assert Watch.modeButton() , TimeMode\r\n\r\n      Watch.mode = MinsMode # reset to correct mode\r\n      it \"MINS <- [SET] : should be MINS - No change state\" , ->\r\n        assert Watch.setButton() , MinsMode\r\n      it \"MINS <- [SET] : change Watch.Mins should be 1\" , ->\r\n        assert Watch.mins , 1\r\n\r\n"
  ]
}